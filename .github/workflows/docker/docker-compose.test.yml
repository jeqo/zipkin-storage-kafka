# permit depends_on/condition: service_healthy
version: "2.4"

services:
  kafka:
    image: ghcr.io/openzipkin/zipkin-kafka
    container_name: kafka
    ports:
      # Processes on the Docker host can set bootstrap server list to localhost:19092
      - 19092:19092
  kafka-topics:
    image: ghcr.io/openzipkin/zipkin-kafka
    container_name: kafka-topics
    entrypoint: "/bin/sh -c"
    command: "
      \"/kafka/bin/kafka-run-class.sh kafka.admin.TopicCommand --bootstrap-server kafka:9092 --create --topic zipkin-spans --partitions 2 --replication-factor 1 --if-not-exists
      &&
      /kafka/bin/kafka-run-class.sh kafka.admin.TopicCommand --bootstrap-server kafka:9092 --create --topic zipkin-trace --partitions 2 --replication-factor 1 --if-not-exists
      &&
      /kafka/bin/kafka-run-class.sh kafka.admin.TopicCommand --bootstrap-server kafka:9092 --create --topic zipkin-dependency --partitions 2 --replication-factor 1 --if-not-exists\"
      "
    depends_on:
      kafka:
        condition: service_healthy
  # Use fixed service and container name 'sut; so our test script can copy/pasta
  sut:
    # This is the image just built. It is not in a remote repository.
    image: openzipkincontrib/zipkin-storage-kafka:test
    container_name: sut
    ports:
      - 9411:9411
    environment:
      STORAGE_TYPE: kafka
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_STORAGE_DIR: /zipkin/data
    volumes:
      - zipkin:/zipkin/data
    depends_on:
      kafka:
        condition: service_healthy
      kafka-topics:
        condition: service_started
volumes:
  zipkin:
