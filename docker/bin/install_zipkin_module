#!/bin/sh
#
# Copyright 2019-2020 The OpenZipkin Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied. See the License for the specific language governing permissions and limitations under
# the License.
#

set -eux

# This script decides based on $RELEASE_FROM_MAVEN_BUILD and $RELEASE_VERSION whether to reuse or
# download the binaries we need.
if [ "$RELEASE_FROM_MAVEN_BUILD" = "true" ]; then
  echo "*** Reusing zipkin module in the Docker context..."
  # If this fails, it is possible the .gitignore is missing a line like:
  #   !./module/target/zipkin-module-storage-kafka-*-module.jar
  cp "/code/module/target/${ARTIFACT_ID}-${RELEASE_VERSION}-module.jar" ${ARTIFACT_ID}.jar
else
  case ${RELEASE_VERSION} in
    *-SNAPSHOT )
      echo "Building from source within Docker is not supported. \
            Build via instructions at the bottom of README.md and set RELEASE_FROM_MAVEN_BUILD=true"
      exit 1
      ;;
    * )
      echo "*** Downloading from Maven..."
        mvn -q --batch-mode --batch-mode org.apache.maven.plugins:maven-dependency-plugin:3.1.2:get \
          -Dtransitive=false -Dartifact=${GROUP_ID}:${ARTIFACT_ID}:${RELEASE_VERSION}:jar:module
        find ~/.m2/repository -name ${ARTIFACT_ID}-${RELEASE_VERSION}-module.jar -exec cp {} ${ARTIFACT_ID}.jar \;
      ;;
    esac
fi

# sanity check
test -f ${ARTIFACT_ID}.jar

(mkdir ${ARTIFACT_ID} && cd ${ARTIFACT_ID} && jar -xf ../${ARTIFACT_ID}.jar) && rm ${ARTIFACT_ID}.jar
